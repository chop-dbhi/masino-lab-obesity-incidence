{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 library('RPostgreSQL')\
library(getPass)\
library(sqldf)\
library(plyr)\
library(ggplot2)\
library(scales)\
library(data.table)\
library("dplyr")\
library(extrafont)\
library(caTools)\
library(arulesSequences)\
library(Matrix)\
library(arules)\
library(e1071)\
library(devtools)\
library(reshape2)\
\
pg = dbDriver("PostgreSQL")\
con = dbConnect(pg, user="campbelle2", password=getPass::getPass(), host="reslnpbddb01.research.chop.edu",\
                port=5432, dbname="pbd_cohort")\
\
#Select visit occurrences with plausible height, weight, and BMI measurements\
\
plausible_bmi = "select person_id, visit_occurrence_id from obesity_pangx_v27.heightconvert_weightconvert_bmi_zscore_flag where height_biv = 0 and weight_biv=0"\
\
#insurance info\
\
insurance = "select visit_occurrence_id, plan_type, plan_class from chop_pbd_v27.visit_payer"\
\
#Person level info\
\
person= "SELECT person_id, gender_concept_id, race_concept_id, ethnicity_concept_id, make_date(year_of_birth, month_of_birth, day_of_birth) as birthday\
FROM chop_pbd_v27.person"\
\
#Walked condition source concepts \
\
walked_csc= "SELECT concept_id, concept_name from vocabulary.concept"\
\
#Clinical finding info\
\
snomed_code = "SELECT concept_id, concept_name, vocabulary_id\
FROM vocabulary.concept\
WHERE vocabulary_id='SNOMED' AND domain_id='Condition' AND concept_class_id = 'Clinical Finding'"\
\
#Mapped Condition Source Concept IDs\
\
ICD_WALKED_CONCEPTS= "SELECT DISTINCT edc_code, edc_description, condition_source_concept_id, icd_code FROM chop_pbd_v27.icd_edc_crosswalk"\
\
# Measures table\
\
measures3= "SELECT ps1.person_id, ms1.condition_start_date, ms1.visit_occurrence_id\
FROM chop_pbd_v27.person ps1  JOIN chop_pbd_v27.condition_occurrence ms1 ON ps1.person_id = ms1.person_id\
WHERE DATE (ms1.condition_start_date) > '12/31/2004' AND DATE (ms1.condition_start_date) < '01/01/2017'\
AND  DATE (ms1.condition_start_date) > DATE (concat_ws('-', ps1.year_of_birth, ps1.month_of_birth, ps1.day_of_birth ))\
"\
#Look up the visit concept IDs by visit occurrence ID\
\
Obese_visit_type = "WITH ms_dates as \
(SELECT ps1.person_id, ms1.measurement_date\
FROM chop_pbd_v27.person ps1  JOIN chop_pbd_v27.measurement_anthro ms1 ON ps1.person_id = ms1.person_id\
WHERE ms1.measurement_concept_id = 2000000043 AND ms1.value_as_number > 1.645 AND DATE (ms1.measurement_date) > '12/31/2008'AND DATE (ms1.measurement_date) < '01/01/2017'\
AND ms1.measurement_date  - make_date(ps1.year_of_birth, ps1.month_of_birth, ps1.day_of_birth) >= (2*365)\
AND ms1.measurement_date  - make_date(ps1.year_of_birth, ps1.month_of_birth, ps1.day_of_birth) <= (18*365)\
AND  DATE (ms1.measurement_date) > DATE (concat_ws('-', ps1.year_of_birth, ps1.month_of_birth, ps1.day_of_birth ))), \
\
visit_types AS \
(SELECT vo1.person_id, vo1.visit_concept_id, vo1.visit_start_date, vo1.visit_occurrence_id, min_dates_tbl.min_obese_date FROM chop_pbd_v27.visit_occurrence AS vo1\
INNER JOIN\
(\
  SELECT person_id, MIN(measurement_date) AS min_obese_date FROM ms_dates \
  GROUP BY (person_id)\
) AS min_dates_tbl\
  ON min_dates_tbl.person_id = vo1.person_id\
  WHERE vo1.visit_end_date = min_dates_tbl.min_obese_date\
)\
\
SELECT person_id, min_obese_date, visit_start_date, visit_occurrence_id, visit_concept_id \
FROM visit_types\
;\
"\
\
#Conditions recorded during first visit after obesity diagnosis\
\
post_obese = "WITH ms_dates as \
(SELECT ps1.person_id, ms1.measurement_date\
FROM chop_pbd_v27.person ps1  JOIN chop_pbd_v27.measurement_anthro ms1 ON ps1.person_id = ms1.person_id\
WHERE ms1.measurement_concept_id = 2000000043 AND ms1.value_as_number > 1.645 AND DATE (ms1.measurement_date) > '12/31/2008'AND DATE (ms1.measurement_date) < '01/01/2017'\
AND ms1.measurement_date  - make_date(ps1.year_of_birth, ps1.month_of_birth, ps1.day_of_birth) >= (2*365)\
AND ms1.measurement_date  - make_date(ps1.year_of_birth, ps1.month_of_birth, ps1.day_of_birth) <= (18*365)\
AND  DATE (ms1.measurement_date) > DATE (concat_ws('-', ps1.year_of_birth, ps1.month_of_birth, ps1.day_of_birth ))),\
\
co_post_obese AS \
(SELECT co_tbl.person_id, min_dates_tbl.min_obese_date, condition_start_date, condition_concept_id, visit_occurrence_id, condition_source_concept_id\
FROM chop_pbd_v27.condition_occurrence AS co_tbl\
INNER JOIN\
(\
  SELECT person_id, MIN(measurement_date) AS min_obese_date FROM ms_dates\
  GROUP BY (person_id)\
) AS min_dates_tbl\
  ON min_dates_tbl.person_id = co_tbl.person_id\
  WHERE co_tbl.condition_start_date > min_dates_tbl.min_obese_date AND DATE(co_tbl.condition_start_date) > '12/31/2004' AND DATE(co_tbl.condition_start_date) < '01/01/2018'\
)\
\
SELECT t1.person_id, t1.min_obese_date, t2.min_post_co_date, condition_concept_id, visit_occurrence_id, condition_source_concept_id FROM co_post_obese AS t1\
INNER JOIN\
(SELECT person_id, MIN(condition_start_date) as min_post_co_date\
FROM co_post_obese\
GROUP BY (person_id)\
) AS t2\
ON t1.person_id = t2.person_id\
WHERE t1.condition_start_date = t2.min_post_co_date\
ORDER BY t1.person_id\
;\
"\
\
#Conditions recorded during first visit before obesity diagnosis\
\
pre_obese = "WITH ms_dates as \
(SELECT ps1.person_id, ms1.measurement_date\
FROM chop_pbd_v27.person ps1  JOIN chop_pbd_v27.measurement_anthro ms1 ON ps1.person_id = ms1.person_id\
WHERE ms1.measurement_concept_id = 2000000043 AND ms1.value_as_number > 1.645 AND DATE (ms1.measurement_date) > '12/31/2008'AND DATE (ms1.measurement_date) < '01/01/2017'\
AND ms1.measurement_date  - make_date(ps1.year_of_birth, ps1.month_of_birth, ps1.day_of_birth) >= (2*365)\
AND ms1.measurement_date  - make_date(ps1.year_of_birth, ps1.month_of_birth, ps1.day_of_birth) <= (18*365)\
\
AND  DATE (ms1.measurement_date) > DATE (concat_ws('-', ps1.year_of_birth, ps1.month_of_birth, ps1.day_of_birth ))),\
\
co_before_obese AS \
(SELECT co_tbl.person_id, min_dates_tbl.min_obese_date, condition_start_date, visit_occurrence_id, condition_concept_id, condition_source_concept_id\
FROM chop_pbd_v27.condition_occurrence AS co_tbl\
INNER JOIN\
(\
  SELECT person_id, MIN(measurement_date) AS min_obese_date FROM ms_dates \
  GROUP BY (person_id)\
) AS min_dates_tbl\
  ON min_dates_tbl.person_id = co_tbl.person_id\
  WHERE co_tbl.condition_start_date < min_dates_tbl.min_obese_date AND DATE(co_tbl.condition_start_date) > '12/31/2004' AND DATE(co_tbl.condition_start_date) < '01/01/2018'\
)\
SELECT t1.person_id, t1.min_obese_date, t2.max_prior_co_date, condition_concept_id, visit_occurrence_id, condition_source_concept_id FROM co_before_obese AS t1\
INNER JOIN\
(SELECT person_id, MAX(condition_start_date) as max_prior_co_date\
FROM co_before_obese\
GROUP BY (person_id)\
) AS t2\
ON t1.person_id = t2.person_id\
WHERE t1.condition_start_date = t2.max_prior_co_date\
ORDER BY t1.person_id\
;\
"\
\
#Conditions recorded during visit of first obesity diagnosis\
\
obese_con = "WITH ms_dates as \
(SELECT ps1.person_id, ms1.measurement_date\
FROM chop_pbd_v27.person ps1  JOIN chop_pbd_v27.measurement_anthro ms1 ON ps1.person_id = ms1.person_id\
WHERE ms1.measurement_concept_id = 2000000043 AND ms1.value_as_number > 1.645 AND DATE (ms1.measurement_date) > '12/31/2008'AND DATE (ms1.measurement_date) < '01/01/2017'\
AND ms1.measurement_date  - make_date(ps1.year_of_birth, ps1.month_of_birth, ps1.day_of_birth) >= (2*365)\
AND ms1.measurement_date  - make_date(ps1.year_of_birth, ps1.month_of_birth, ps1.day_of_birth) <= (18*365)\
AND  DATE (ms1.measurement_date) > DATE (concat_ws('-', ps1.year_of_birth, ps1.month_of_birth, ps1.day_of_birth ))),\
\
co_obese AS \
(SELECT co_tbl.person_id, min_dates_tbl.min_obese_date, condition_start_date, visit_occurrence_id, condition_concept_id, condition_source_concept_id \
FROM chop_pbd_v27.condition_occurrence AS co_tbl\
INNER JOIN\
(\
  SELECT person_id, MIN(measurement_date) AS min_obese_date FROM ms_dates \
  GROUP BY (person_id)\
) AS min_dates_tbl\
  ON min_dates_tbl.person_id = co_tbl.person_id\
  WHERE co_tbl.condition_start_date = min_dates_tbl.min_obese_date\
)\
\
SELECT person_id, min_obese_date, condition_start_date, condition_concept_id, visit_occurrence_id, condition_source_concept_id\
FROM co_obese\
;\
"\
\
visit_type= "SELECT person_id, visit_concept_id, visit_start_date, visit_occurrence_id FROM chop_pbd_v27.visit_occurrence"\
\
conditions = "SELECT person_id, condition_start_date, visit_occurrence_id, condition_concept_id, condition_source_concept_id\
FROM chop_pbd_v27.condition_occurrence"\
\
\
insurance <- dbGetQuery(con,insurance)\
plausible_bmi <- dbGetQuery(con,plausible_bmi)\
walked_csc <- dbGetQuery(con,walked_csc)\
walked_concepts <- dbGetQuery(con,ICD_WALKED_CONCEPTS)\
snomed_codes <- dbGetQuery(con, snomed_code)\
person_data <- dbGetQuery(con, person)\
Obese_VT_data <- dbGetQuery(con, Obese_visit_type)\
post_obese_data <- dbGetQuery(con, post_obese)\
pre_obese_data <- dbGetQuery(con, pre_obese)\
obese_con_data <- dbGetQuery(con, obese_con)\
visit_data <- dbGetQuery(con, visit_type)\
measures_data2 <- dbGetQuery(con, measures3)\
conditions <- dbGetQuery(con, conditions)\
\
data(plausible_bmi)\
data(insurance)\
data(walked_csc)\
data(walked_concepts)\
data(snomed_codes)\
data(person_data)\
data(Obese_VT_data)\
data(post_obese_data)\
data(pre_obese_data)\
data(obese_con_data)\
data(visit_data)\
data(conditions)\
\
#Eliminate duplicate entries\
\
Obese_VT_data = unique(Obese_VT_data)\
obese_con_data = unique(obese_con_data)\
post_obese_data = unique(post_obese_data)\
pre_obese_data = unique(pre_obese_data)\
\
#Create data tables\
\
setDT(plausible_bmi)\
setDT(insurance)\
setDT(walked_csc)\
setDT(walked_concepts)\
setDT(snomed_codes)\
setDT(person_data)\
DT_Visit_Type <- setDT(Obese_VT_data) \
setDT(post_obese_data) \
setDT(pre_obese_data)\
setDT(obese_con_data)\
setDT(visit_data)\
setDT(conditions)\
\
#eliminate index visits where there was an implausible BMI\
\
obese_con_data = obese_con_data[person_id %in% plausible_bmi$person_id]\
\
#Ensure visits are face to face encounters and all person IDs have index visits\
\
obese_index <- obese_con_data[visit_occurrence_id %in% DT_Visit_Type[visit_concept_id %in% c(9201, 9202, 9203)]$visit_occurrence_id]\
pre_index <- pre_obese_data[visit_occurrence_id %in% visit_data[visit_concept_id %in% c(9201, 9202, 9203)]$visit_occurrence_id]\
post_index <- post_obese_data[visit_occurrence_id %in% visit_data[visit_concept_id %in% c(9201, 9202, 9203)]$visit_occurrence_id]\
\
post_index <- post_index[person_id %in% obese_index$person_id]\
pre_index <- pre_index[person_id %in% obese_index$person_id]\
\
setDT(obese_index)\
setDT(pre_index)\
setDT(post_index)\
\
#Establish if visit occurred before, after, or during first obesity diagnosis\
\
post_index$Timing_Class = '3'\
pre_index$Timing_Class = '1'\
obese_index$Timing_Class = '2'\
\
#Standardize visit date names from original queries\
setnames(pre_index, 'max_prior_co_date', 'visit_date')\
setnames(post_index, 'min_post_co_date', 'visit_date')\
setnames(obese_index, 'condition_start_date', 'visit_date')\
\
# combine all three data tables row-wise\
obese_data = rbind(pre_index, obese_index, post_index)\
\
obese_data[, person_id := as.factor(person_id)]\
obese_data[, condition_concept_id := as.factor(condition_concept_id)]\
obese_data[, Timing_Class := as.factor(Timing_Class)]\
\
obese_data[,.N,by=person_id]\
\
#Ensure that all patients have a pre-index visits\
\
obese_data <- obese_data[person_id %in% pre_index$person_id]\
\
\
#Create dataset with only patients with a "during" visit\
timingGroups = obese_data[, .('1' %in% Timing_Class, '2' %in% Timing_Class, '3' %in% Timing_Class), by = person_id]\
\
setnames(timingGroups, c('V1', 'V2', 'V3'), c('has.pre', 'has.during', 'has.post'))\
\
#Must have "during"\
obese_data2 <- timingGroups[has.during == 1]\
obese_data2 <- timingGroups[has.pre == 1]\
setDT(obese_data2)\
\
#Merge timing data with clinical data\
total <- merge(obese_data,obese_data2,by="person_id")\
setkey(total,person_id)\
setkey(obese_data2,person_id)\
total[, person_id := as.factor(person_id)]\
obese_data2[, person_id := as.factor(person_id)]\
\
\
total <- total[person_id %in% obese_data2$person_id]\
\
#Create and view tables of time differences between visit and obesity diagnosis\
pre_diff <- total[Timing_Class == '1', abs(visit_date - min_obese_date), by =  .(person_id, visit_date)]\
post_diff <- total[Timing_Class == '3', abs(visit_date - min_obese_date), by = .(person_id, visit_date)] \
no_diff <- total[Timing_Class == '2', abs(visit_date - min_obese_date), by = .(person_id, visit_date)] \
\
post_diff$Visit_Timing = '3'\
pre_diff$Visit_Timing = '1'\
no_diff$Visit_Timing = '2'\
\
#Create unique data tables for each set of time difference data and a data table with both pre/post data\
DT_pre_diff <- setDT(pre_diff) \
DT_post_diff <- setDT(post_diff)\
DT_no_diff <- setDT(no_diff)\
\
#Combine all pre/post time difference data\
PrePostDiffDT <- rbind(DT_pre_diff, DT_post_diff, fill= TRUE)\
\
#Combine time difference data into a single table\
time_diff_all = rbind(pre_diff, post_diff, no_diff)\
DT_all_diff = setDT(time_diff_all)\
\
#Order the person_id and visit_date for total and DT_all_diff data\
total <- total[with(total, order(person_id, visit_date))]\
\
DT_all_diff <- DT_all_diff[with(DT_all_diff, order(person_id, visit_date))]\
\
total_data <- mutate(total, V1=DT_all_diff$V1)\
\
total_data <- setDT(total_data)\
View(total_data)\
\
total_data[,.N,by=person_id]\
total_data[,.N,by=visit_occurrence_id]\
\
#Drop Patient Encounter Status and Missing Condition Concept IDs\
\
total_data = total_data[!total_data$condition_concept_id==443364,] #drop patient encounter status\
total_data = total_data[!total_data$condition_concept_id== 0,]\
total_data = total_data[!total_data$condition_source_concept_id== 0,]\
total_data= total_data[!total_data$visit_occurrence_id=='NA',]\
\
total_data[,.N,by=person_id]\
total_data[,.N,by=visit_occurrence_id]\
\
#Eliminate pre/post index visits for patients whose index visits were eliminated\
\
total_index <- subset(total_data, Timing_Class== '2', select=c(unique(person_id)))\
total_data = total_data[person_id %in% total_index$person_id]\
\
##Eliminate visits for patients whose pre-index visits were eliminated\
\
total_pre_index <- subset(total_data, Timing_Class== '1', select=c(unique(person_id)))\
total_data = total_data[person_id %in% total_pre_index$person_id]\
\
total_data[,.N,by=person_id]\
total_data[,.N,by=visit_occurrence_id]\
\
#Format variables\
\
toString(total_data$condition_concept_id, width = NULL)\
total_data[, person_id := as.factor(person_id)]\
total_data[, Timing_Class := as.numeric(Timing_Class)]\
\
#Condition source concept mapping\
obesity_condition_source= walked_csc[concept_id %in% total_data$condition_source_concept_id]\
setDT(obesity_condition_source)\
colnames(obesity_condition_source) <- c("condition_source_concept_id","concept_name")\
setkey(walked_concepts, condition_source_concept_id)\
setkey(obesity_condition_source, condition_source_concept_id)\
setkey(total_data,condition_source_concept_id)\
\
# left join total_data with obesity condition source names\
total_data = obesity_condition_source[total_data]\
\
#Reorder columns: \
\
total_data <- total_data[,c(3,4,5,6,1,2,7,8,9,10,11,12)]\
\
##Ensure all patients have a pre-index visit\
pre_index_pid <- total_data[,c(1,8)]\
setDT(pre_index_pid)\
pid_pre_index <- subset(pre_index_pid, Timing_Class== '1')\
pid_pre_index <- pid_pre_index[!duplicated(pid_pre_index), ]\
setDT(pid_pre_index)\
total_data = total_data[person_id %in% pid_pre_index$person_id]\
\
#Partition Data into Clinical/Non-Clinical Findings\
\
#Data table of only clinical findings \
\
partition1 <- total_data[condition_concept_id %in% snomed_codes$concept_id]\
obese_clinical_con <- setDT(partition1)\
\
obese_clinical_con[,.N,by=person_id]\
obese_clinical_con[,.N,by=visit_occurrence_id]\
\
\
#Data table of non-clinical findings\
\
partition2 <- total_data[!(condition_concept_id %in% snomed_codes$concept_id)]\
partition2[,.N,by=person_id]\
partition2[,.N,by=visit_occurrence_id]\
partition3 <- partition2[person_id %in% obese_clinical_con$person_id]\
partition4 <- partition3[visit_occurrence_id %in% obese_clinical_con$visit_occurrence_id]\
obese_nonclinical_con <- setDT(partition4)\
\
obese_nonclinical_con[,.N,by=person_id]\
obese_nonclinical_con[,.N,by=visit_occurrence_id]\
\
#exclude patients whose index visit did not have any clinical observations\
\
clinical_index <- subset(obese_clinical_con, Timing_Class== '2', select=c(unique(person_id)))\
\
obese_nonclinical_con = obese_nonclinical_con[person_id %in% clinical_index$person_id]\
obese_clinical_con = obese_clinical_con[person_id %in% clinical_index$person_id]\
\
#exclude patients whose pre-index visit didn't have any clinical observations\
clinical_pre_index <- subset(obese_clinical_con, Timing_Class== '1', select=c(unique(person_id)))\
obese_nonclinical_con = obese_nonclinical_con[person_id %in% clinical_pre_index$person_id]\
obese_clinical_con = obese_clinical_con[person_id %in% clinical_pre_index$person_id]\
\
#summary statistics\
\
obese_nonclinical_con[,.N,by=person_id]\
obese_nonclinical_con[,.N,by=visit_occurrence_id]\
\
obese_clinical_con[,.N,by=person_id]\
obese_clinical_con[,.N,by=visit_occurrence_id]\
\
#Number of unique EDCs and condition source concept IDs\
walked_concepts[,.N,by=edc_code]\
walked_concepts[,.N,by=condition_source_concept_id]\
\
#Write data tables to CSVs\
\
#EDC crosswalk mappings\
write.csv(walked_concepts, 'source_EDC.csv')\
\
#Clinical Conditions\
write.csv(obese_clinical_con, 'clinical_findings_obese.csv')\
\
#Non-Clinical Conditions\
write.csv(obese_nonclinical_con, 'nonclinical_findings_obese.csv')\
\
#Concatenate clinical and non-clinical observations\
\
total2= rbind(obese_clinical_con, obese_nonclinical_con)\
\
total2[,.N,by=person_id]\
total2[,.N,by=visit_occurrence_id]\
\
#Save dataset\
write.csv(total2, 'obese_observations.csv')\
\
#make demographic table\
personID <- subset(total2, select=c(unique(person_id)))\
person_data = unique(person_data)\
a <- data.table(person_data)\
setkey(a,person_id)\
b <- data.table(personID)\
setkey(b,person_id)\
b[, person_id := as.factor(person_id)]\
a[, person_id := as.factor(person_id)]\
\
person_table <- a[person_id %in% b$person_id]\
summary(person_table)\
as.data.frame(person_table)\
\
#gender\
prop.table(table(person_table$gender_concept_id))\
person_table[,.N,by=gender_concept_id]\
\
#race\
prop.table(table(person_table$race_concept_id))\
person_table[,.N,by=race_concept_id]\
\
#ethnicity\
prop.table(table(person_table$ethnicity_concept_id))\
person_table[,.N,by=ethnicity_concept_id]\
\
\
##Create data table for matching\
visit <- subset(total2, Timing_Class== '2', select=c(person_id, min_obese_date, visit_date, Timing_Class))\
case_table <- subset(visit, select=c(unique(person_id), min_obese_date))\
case_table <-case_table[!duplicated(case_table), ]\
setDT(case_table)\
person_table2 <- person_table[person_id %in% case_table$person_id]\
case_table[, person_id := as.factor(person_id)]\
person_table2[, person_id := as.factor(person_id)]\
setkey(person_table2,person_id)\
setkey(case_table,person_id)\
case_data = case_table[person_table2]\
setDT(case_data)\
View(case_data)\
\
case_data <- case_data[,c(1,2,3)]\
setDT(case_data)\
case_data <- case_data[!duplicated(case_data), ]\
\
#face to face encounters\
\
data(measures_data2)\
setDT(measures_data2)\
measures_data2 <- measures_data2[order(person_id, condition_start_date)]\
View(measures_data2)\
\
measures_data2= measures_data2[!measures_data2$visit_occurrence_id=='NA',]\
measures_data2= measures_data2[!measures_data2$condition_start_date=='NA',]\
measures_data2= measures_data2[!measures_data2$person_id=='NA',]\
\
\
##Measures must have been from visits with a clinical observation\
##Data of all clincial observations for all patients\
\
conditions2 <- conditions[condition_concept_id %in% snomed_codes$concept_id]\
setDT(conditions2)\
\
conditions2 = conditions2[!conditions2$condition_concept_id==443364,] #drop patient encounter status\
conditions2 = conditions2[!conditions2$condition_concept_id== 0,]\
conditions2 = conditions2[!conditions2$condition_source_concept_id== 0,]\
conditions2= conditions2[!conditions2$visit_occurrence_id=='NA',]\
conditions2= conditions2[!conditions2$condition_source_concept_id=='NA',]\
\
View(conditions2)\
\
measures_data2 <- measures_data2[visit_occurrence_id %in% conditions2$visit_occurrence_id]\
\
\
setkey(measures_data2,person_id)\
setkey(case_data,person_id)\
measures_data2[, person_id := as.factor(person_id)]\
case_data[, person_id := as.factor(person_id)]\
\
measures_cases <- measures_data2[person_id %in% case_data$person_id]\
View(measures_cases)\
measures_cases[,.N,by=person_id]\
setDT(measures_cases)\
\
measures_cases <- measures_cases[visit_occurrence_id %in% visit_data[visit_concept_id %in% c(9201, 9202, 9203)]$visit_occurrence_id]\
measures_cases[, person_id := as.factor(person_id)]\
setkey(measures_cases,person_id)\
\
#Add gender and index visit info\
\
measures_cases = measures_cases[case_data]\
\
##Measures must have been from visits with a clinical observation\
##Data of all clincial observations for all patients\
\
measures_cases <- measures_cases[visit_occurrence_id %in% conditions2$visit_occurrence_id]\
\
\
#Add birthday info\
birthday_table <- person_table[,c(1,5)]\
setDT(birthday_table)\
birthday_table <- birthday_table[!duplicated(birthday_table), ]\
setkey(birthday_table,person_id)\
\
measures_cases = measures_cases[birthday_table]\
\
\
##Add age at index visit\
\
measures_cases$index_age<- difftime(measures_cases$min_obese_date, measures_cases$birthday, units = c("days"))\
\
##get unique visit date count\
\
measure_visit_dates <- measures_cases[,c(1,2)]\
setDT(measure_visit_dates)\
measure_visit_dates <- measure_visit_dates[!duplicated(measure_visit_dates), ]\
measure_visit_dates <-measure_visit_dates[order(person_id, condition_start_date)]\
measure_visit_dates[, num_of_prior_visits := seq(1, nrow(.SD)) - 1, by = person_id]\
\
setkeyv(measure_visit_dates, c("person_id","condition_start_date"))\
\
##Visit info from the index visit\
total_index2 <- subset(total2, Timing_Class== '2', select=c(person_id, visit_occurrence_id))\
setDT(total_index2)\
measures_cases2 <-measures_cases[visit_occurrence_id %in% total_index2$visit_occurrence_id]\
View(measures_cases2)\
setkeyv(measures_cases2, c("person_id","condition_start_date"))\
\
#Combine info\
measures_cases3 = measures_cases2[measure_visit_dates]\
\
measures_cases4 = measures_cases3[!measures_cases3$index_age== 'NA',]\
View(measures_cases4)\
measures_cases5 <- measures_cases4[,c(1,4,5,7,8)]\
case_population <-measures_cases5[!duplicated(measures_cases5), ]\
setDT(case_population)\
case_population$casecont = 'case'\
\
case_population <- case_population[, gender := as.factor(gender_concept_id)]\
\
case_population<- case_population[,c(1,4,5,6,7)]\
\
case_population <- case_population[,c(1,5,2,3,4)]\
case_population <- case_population[, index_age := as.numeric(index_age)]\
\
write.csv(case_population, 'case_population.csv')\
}